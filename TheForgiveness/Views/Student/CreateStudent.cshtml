@model TheForgiveness.Models.studentModel

@{
    ViewBag.Title = "Registrar Estudiante";
    Layout = "~/Views/Shared/DashBoard.cshtml";
    ViewBag.Style = "../Assets/Css/Subject/create.min.css";
}

<h1>Registrar Nuevo Estudiante</h1>
<hr />
<div class="card-body wizard-content">

    @using (Html.BeginForm("CreateStudent", "DashBoard", FormMethod.Post, new { @class = "m-t-40", @id = "example-form" }))
    {
        @Html.AntiForgeryToken()
        <div>
            <section>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-row">
                    <div class="form-group col-4">
                        @Html.LabelFor(model => model.NumIdentificacion, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.NumIdentificacion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NumIdentificacion, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-4">
                        @Html.LabelFor(model => model.PriNombre, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.PriNombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PriNombre, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-4">
                        @Html.LabelFor(model => model.SegNombre, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.SegNombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SegNombre, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-4">
                        @Html.LabelFor(model => model.PriApellido, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.PriApellido, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PriApellido, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-4">
                        @Html.LabelFor(model => model.SegApellido, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.SegApellido, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SegApellido, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-4">
                        @Html.LabelFor(model => model.FechaNacimiento, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.FechaNacimiento, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FechaNacimiento, "", new { @class = "text-danger" })
                    </div>
                </div>
            </section>

            <section>
                <div class="form-row">

                    <div class="form-group col-4">
                        @Html.LabelFor(model => model.Genero, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Genero, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Genero, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-8">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "email form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
 
                </div>
                
            </section>

            <section>
                <div class="form-row">
                    <div class="form-group col-5 offset-1">
                        @Html.LabelFor(model => model.Municipio, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Municipio, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Municipio, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-5">
                        @Html.LabelFor(model => model.Municipio, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Municipio, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Municipio, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-2 offset-5">
                        <div class="col-12">
                            <input type="submit" value="Registrar Nuevo Estudiante" class="btn btn-outline-success" />
                        </div>

                    </div>
                </div>
            </section>

        </div>
    }

</div>


<div>
    @Html.ActionLink("Back to List", "GetStudents")
</div>
