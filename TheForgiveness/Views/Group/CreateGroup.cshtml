@model TheForgiveness.Models.GroupModel

@{
    ViewBag.Title = "Crear Grupo";
    Layout = "~/Views/Shared/DashBoard.cshtml";
    ViewBag.Style = "../Assets/Css/Subject/create.min.css";
}

<h1>Crear nuevo Grupo</h1>
<hr />
@using (Html.BeginForm("CreateGroup", "Group", FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Codigo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Codigo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Codigo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AñoEscolar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AñoEscolar, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AñoEscolar, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Docente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="Docente" class="form-control " id="Docente">
                    <option value="default"></option>
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Asignatura, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="Asignatura" class="form-control " id="Asignatura">
                    <option value="default"></option>
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Colegio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="Colegio" class="form-control " id="Colegio">
                    <option value="default"></option>
                </select>
            </div>
        </div>
        <hr />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-outline-success" />
            </div>
        </div>
    </div>
}
    <script>
    @{
    @:var docentes = @Html.Raw(ViewData["docentes"].ToString()); ;
    @:var asignaturas = @Html.Raw(ViewData["asignaturas"].ToString()); ;
    @:var colegios = @Html.Raw(ViewData["colegios"].ToString()); ;
    }
    $(document).ready(function () {
        llenardoc();
        llenarcol();
        llenarasig();}
        );
        

    function llenarcol(){
        let ele = document.getElementById('Colegio');
        for (let i = 0; i < colegios.length; i++) {
            let option = document.createElement("option");
            option.text = colegios[i].Nombre;
            option.value = colegios[i].ID;
            ele.add(option);
        }
    }
    function llenarasig(){
        let ele = document.getElementById('Asignatura');
        for (let i = 0; i < asignaturas.length; i++) {
            let option = document.createElement("option");
            option.text = asignaturas[i].Nombre;
            option.value = asignaturas[i].ID;
            ele.add(option);
        }
    }

    function llenardoc() {
        let ele = document.getElementById('Docente');
        for (let i = 0; i < docentes.length; i++) {
            let option = document.createElement("option");
            option.text = docentes[i].Docente;
            option.value = docentes[i].ID;
            ele.add(option);
        }
    }
    </script>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
